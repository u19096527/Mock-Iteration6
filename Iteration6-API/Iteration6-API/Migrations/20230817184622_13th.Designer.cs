// <auto-generated />
using System;
using Iteration6_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Iteration6_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230817184622_13th")]
    partial class _13th
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Iteration6_API.Models.AuditEntryType", b =>
                {
                    b.Property<int>("Audit_Entry_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Audit_Entry_Type_ID"), 1L, 1);

                    b.Property<string>("Audit_Entry_Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Audit_Entry_Type_ID");

                    b.ToTable("AuditEntryTypes");

                    b.HasData(
                        new
                        {
                            Audit_Entry_Type_ID = 1,
                            Audit_Entry_Type = "BackUpSystemData"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 2,
                            Audit_Entry_Type = "RestoreSystemData"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 3,
                            Audit_Entry_Type = "UpdateVAT"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 4,
                            Audit_Entry_Type = "ViewVAT"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 5,
                            Audit_Entry_Type = "AddUserRole"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 6,
                            Audit_Entry_Type = "UpdateUserRole"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 7,
                            Audit_Entry_Type = "ViewUserRole"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 8,
                            Audit_Entry_Type = "DeleteUserRole"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 9,
                            Audit_Entry_Type = "AddHelpTip"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 10,
                            Audit_Entry_Type = "ViewHelpTip"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 11,
                            Audit_Entry_Type = "UpdateHelpTip"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 12,
                            Audit_Entry_Type = "DeleteHelpTip"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 13,
                            Audit_Entry_Type = "SendNewsletter"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 14,
                            Audit_Entry_Type = "PerformStockTake"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 15,
                            Audit_Entry_Type = "WriteOffInventory"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 16,
                            Audit_Entry_Type = "ViewAuditTrail"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 17,
                            Audit_Entry_Type = "UploadPrescribedBookList"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 18,
                            Audit_Entry_Type = "AddPrescribedBook"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 19,
                            Audit_Entry_Type = "AddBook"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 20,
                            Audit_Entry_Type = "UpdateBook"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 21,
                            Audit_Entry_Type = "ViewBook"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 22,
                            Audit_Entry_Type = "DeleteBook"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 23,
                            Audit_Entry_Type = "AddModule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 24,
                            Audit_Entry_Type = "UpdateModule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 25,
                            Audit_Entry_Type = "ViewModule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 26,
                            Audit_Entry_Type = "DeleteModule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 27,
                            Audit_Entry_Type = "AddFaculty"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 28,
                            Audit_Entry_Type = "UpdateFaculty"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 29,
                            Audit_Entry_Type = "ViewFaculty"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 30,
                            Audit_Entry_Type = "DeleteFaculty"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 31,
                            Audit_Entry_Type = "AddDepartment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 32,
                            Audit_Entry_Type = "UpdateDepartment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 33,
                            Audit_Entry_Type = "ViewDepartment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 34,
                            Audit_Entry_Type = "DeleteDepartment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 35,
                            Audit_Entry_Type = "AddEvaluationSchedule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 36,
                            Audit_Entry_Type = "UpdateEvaluationSchedule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 37,
                            Audit_Entry_Type = "ViewEvaluationSchedule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 38,
                            Audit_Entry_Type = "RemoveEvaluationSchedule"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 39,
                            Audit_Entry_Type = "EvaluationScheduleSummary"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 40,
                            Audit_Entry_Type = "GenerateBookVoucher"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 41,
                            Audit_Entry_Type = "ViewBookVoucher"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 42,
                            Audit_Entry_Type = "UpdateBookVoucher"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 43,
                            Audit_Entry_Type = "DeleteBookVoucher"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 44,
                            Audit_Entry_Type = "AddEmployee"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 45,
                            Audit_Entry_Type = "ViewEmployee"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 46,
                            Audit_Entry_Type = "UpdateEmployee"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 47,
                            Audit_Entry_Type = "DeleteEmployee"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 48,
                            Audit_Entry_Type = "AddEmployeeType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 49,
                            Audit_Entry_Type = "ViewEmployeeType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 50,
                            Audit_Entry_Type = "UpdateEmployeeType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 51,
                            Audit_Entry_Type = "DeleteEmployeeType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 52,
                            Audit_Entry_Type = "AddEquipment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 53,
                            Audit_Entry_Type = "ViewEquipment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 54,
                            Audit_Entry_Type = "UpdateEquipment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 55,
                            Audit_Entry_Type = "DeleteEquipment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 56,
                            Audit_Entry_Type = "AddEquipmentType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 57,
                            Audit_Entry_Type = "ViewEquipmentType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 58,
                            Audit_Entry_Type = "UpdateEquipmentType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 59,
                            Audit_Entry_Type = "DeleteEquipmentType"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 60,
                            Audit_Entry_Type = "CaptureEquipment"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 61,
                            Audit_Entry_Type = "AddStudent"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 62,
                            Audit_Entry_Type = "ViewStudent"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 63,
                            Audit_Entry_Type = "UpdateStudent"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 64,
                            Audit_Entry_Type = "DeleteStudent"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 65,
                            Audit_Entry_Type = "WalkInSalesReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 66,
                            Audit_Entry_Type = "BookInventoryReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 67,
                            Audit_Entry_Type = "LabEquipmentInventoryReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 68,
                            Audit_Entry_Type = "OnlineOrdersReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 69,
                            Audit_Entry_Type = "ResellersReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 70,
                            Audit_Entry_Type = "AuditTrailReport"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 71,
                            Audit_Entry_Type = "AddSupplier"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 72,
                            Audit_Entry_Type = "ViewSupplier"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 73,
                            Audit_Entry_Type = "UpdateSupplier"
                        },
                        new
                        {
                            Audit_Entry_Type_ID = 74,
                            Audit_Entry_Type = "DeleteSupplier"
                        });
                });

            modelBuilder.Entity("Iteration6_API.Models.AuditTrail", b =>
                {
                    b.Property<int>("AuditTrail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditTrail_ID"), 1L, 1);

                    b.Property<int>("Audit_Entry_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Employee_ID")
                        .HasColumnType("int");

                    b.HasKey("AuditTrail_ID");

                    b.HasIndex("Audit_Entry_Type_ID");

                    b.HasIndex("Employee_ID");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("Iteration6_API.Models.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_ID"), 1L, 1);

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cell_Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Emergency_Contact_Cell")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Emergency_Contact_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Employee_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Physical_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Employee_ID");

                    b.HasIndex("Employee_Type_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Iteration6_API.Models.Employee_Type", b =>
                {
                    b.Property<int>("Employee_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_Type_ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Employee_Type_ID");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("Iteration6_API.Models.Help", b =>
                {
                    b.Property<int>("Help_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Help_ID"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Employee_ID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Help_ID");

                    b.HasIndex("Employee_ID");

                    b.ToTable("HelpTips");
                });

            modelBuilder.Entity("Iteration6_API.Models.Newsletter", b =>
                {
                    b.Property<int>("Newsletter_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Newsletter_ID"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Employee_ID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Student_ID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Newsletter_ID");

                    b.HasIndex("Employee_ID");

                    b.HasIndex("Student_ID");

                    b.ToTable("Newsletters");
                });

            modelBuilder.Entity("Iteration6_API.Models.Student", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"), 1L, 1);

                    b.Property<string>("Cell_Number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Subscribed")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Student_ID");

                    b.HasIndex("User_ID")
                        .IsUnique()
                        .HasFilter("[User_ID] IS NOT NULL");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Iteration6_API.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("User_Role_ID")
                        .HasColumnType("int");

                    b.HasKey("User_ID");

                    b.HasIndex("User_Role_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Iteration6_API.Models.User_Role", b =>
                {
                    b.Property<int>("UserRole_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRole_ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserRole_ID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Iteration6_API.Models.Voucher", b =>
                {
                    b.Property<int>("Voucher_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Voucher_ID"), 1L, 1);

                    b.Property<string>("Expiry_Date")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<string>("Voucher_Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Voucher_ID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Iteration6_API.Models.AuditTrail", b =>
                {
                    b.HasOne("Iteration6_API.Models.AuditEntryType", "AuditEntryTypes")
                        .WithMany("AuditTrail")
                        .HasForeignKey("Audit_Entry_Type_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Iteration6_API.Models.Employee", "Employees")
                        .WithMany("AuditTrail")
                        .HasForeignKey("Employee_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuditEntryTypes");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Iteration6_API.Models.Employee", b =>
                {
                    b.HasOne("Iteration6_API.Models.Employee_Type", "EmployeeType")
                        .WithMany("Employees")
                        .HasForeignKey("Employee_Type_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Iteration6_API.Models.User", "Users")
                        .WithOne("Employees")
                        .HasForeignKey("Iteration6_API.Models.Employee", "User_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EmployeeType");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Iteration6_API.Models.Help", b =>
                {
                    b.HasOne("Iteration6_API.Models.Employee", "Employees")
                        .WithMany("Help")
                        .HasForeignKey("Employee_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Iteration6_API.Models.Newsletter", b =>
                {
                    b.HasOne("Iteration6_API.Models.Employee", "Employees")
                        .WithMany("Newsletters")
                        .HasForeignKey("Employee_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Iteration6_API.Models.Student", "Students")
                        .WithMany("Newsletters")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Iteration6_API.Models.Student", b =>
                {
                    b.HasOne("Iteration6_API.Models.User", "Users")
                        .WithOne("Students")
                        .HasForeignKey("Iteration6_API.Models.Student", "User_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Iteration6_API.Models.User", b =>
                {
                    b.HasOne("Iteration6_API.Models.User_Role", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("User_Role_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Iteration6_API.Models.AuditEntryType", b =>
                {
                    b.Navigation("AuditTrail");
                });

            modelBuilder.Entity("Iteration6_API.Models.Employee", b =>
                {
                    b.Navigation("AuditTrail");

                    b.Navigation("Help");

                    b.Navigation("Newsletters");
                });

            modelBuilder.Entity("Iteration6_API.Models.Employee_Type", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Iteration6_API.Models.Student", b =>
                {
                    b.Navigation("Newsletters");
                });

            modelBuilder.Entity("Iteration6_API.Models.User", b =>
                {
                    b.Navigation("Employees")
                        .IsRequired();

                    b.Navigation("Students")
                        .IsRequired();
                });

            modelBuilder.Entity("Iteration6_API.Models.User_Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
